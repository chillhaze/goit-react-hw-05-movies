{"version":3,"sources":["components/pages/Reviews/Reviews.styled.js","components/pages/Reviews/Reviews.jsx"],"names":["LoaderWrapper","styled","div","ReviewInfo","ReviewList","ul","Review","li","Author","p","Content","ReviewAccent","span","Reviews","params","useParams","useState","movie","setMovie","movieId","setMovieId","status","setStatus","useEffect","mooviesAPI","then","data","catch","error","console","log","reviews","results","type","color","height","width","className","length","map","review","index","author","content"],"mappings":"gOAEaA,EAAgBC,IAAOC,IAAV,sMAYbC,EAAaF,IAAOC,IAAV,+FAMVE,EAAaH,IAAOI,GAAV,0BAEVC,EAASL,IAAOM,GAAV,6GAMNC,EAASP,IAAOQ,EAAV,gDAGNC,EAAUT,IAAOQ,EAAV,mDAGPE,EAAeV,IAAOW,KAAV,4F,OC8CVC,UAjEf,WACE,IAAMC,EAASC,cACf,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAASF,EAAOK,SAA9C,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,mBAAS,QAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACJJ,IACFG,EAAU,WAEVE,IACgBL,GACbM,MAAK,SAAAC,GACJR,EAASQ,GACTJ,EAAU,eAEXK,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAGhBR,EAAW,MACXE,EAAU,WAEX,CAACH,IAEJ,IAAMY,EAAUd,EAAMe,QAEtB,OACE,eAAC7B,EAAD,WACc,YAAXkB,GACC,cAACrB,EAAD,UACE,cAAC,IAAD,CACEiC,KAAK,WACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,UAAU,aAKJ,aAAXhB,GAA4C,IAAnBU,EAAQO,QAChC,yEAGU,aAAXjB,GAAyBU,GACxB,cAAC3B,EAAD,UACG2B,EAAQQ,KAAI,SAACC,EAAQC,GACpB,IAAQC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QAChB,OACE,eAACrC,EAAD,WACE,eAACE,EAAD,oBACQ,cAACG,EAAD,UAAe+B,OAGvB,cAAChC,EAAD,UAAUiC,MALCF","file":"static/js/reviews-page.02e896a3.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 40px;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n`;\n\nexport const ReviewInfo = styled.div`\n  margin-top: 10px;\n  padding: 10px;\n  background-color: white;\n`;\n\nexport const ReviewList = styled.ul``;\n\nexport const Review = styled.li`\n  margin-bottom: 20px;\n  padding: 10px 0;\n  border-bottom: 1px solid #ede9e9;\n`;\n\nexport const Author = styled.p`\n  padding: 10px 0;\n`;\nexport const Content = styled.p`\n  font-style: italic;\n`;\nexport const ReviewAccent = styled.span`\n  line-height: 24px;\n  font-weight: 600;\n  margin-left: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as mooviesAPI from '../../../api-services/fetch-api';\nimport Loader from 'react-loader-spinner';\n\nimport {\n  ReviewInfo,\n  ReviewList,\n  Review,\n  Author,\n  Content,\n  ReviewAccent,\n  LoaderWrapper,\n} from './Reviews.styled';\n\nfunction Reviews() {\n  const params = useParams();\n  const [movie, setMovie] = useState({});\n  const [movieId, setMovieId] = useState(params.movieId);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (movieId) {\n      setStatus('pending');\n\n      mooviesAPI\n        .fetchReviews(movieId)\n        .then(data => {\n          setMovie(data);\n          setStatus('resolved');\n        })\n        .catch(error => {\n          console.log(error);\n        });\n\n      setMovieId(null);\n      setStatus('idle');\n    }\n  }, [movieId]);\n\n  const reviews = movie.results;\n\n  return (\n    <ReviewInfo>\n      {status === 'pending' && (\n        <LoaderWrapper>\n          <Loader\n            type=\"TailSpin\"\n            color=\"#ff8d23\"\n            height={60}\n            width={60}\n            className=\"Loader\"\n          />\n        </LoaderWrapper>\n      )}\n\n      {status === 'resolved' && reviews.length === 0 && (\n        <p>we don't have any reviews for this movie</p>\n      )}\n\n      {status === 'resolved' && reviews && (\n        <ReviewList>\n          {reviews.map((review, index) => {\n            const { author, content } = review;\n            return (\n              <Review key={index}>\n                <Author>\n                  Name: <ReviewAccent>{author}</ReviewAccent>\n                </Author>\n\n                <Content>{content}</Content>\n              </Review>\n            );\n          })}\n        </ReviewList>\n      )}\n    </ReviewInfo>\n  );\n}\n\nexport default Reviews;\n"],"sourceRoot":""}